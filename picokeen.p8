pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- picokeen loader cart ▒

-------------------------------
-- level loading + compression
-------------------------------

-- editor chars to bytes
data = nil
#include mapdata.txt

names = {"lunar landings","space playground", "biodome alpha", "biodome beta","dev room of stuff"}
maps = {}

flicker = true
flicker_timer = 10

map_addr = 0x8000

map_bytes_left = 32767
map_bytes_used = 0

b_to_c = {}
c_to_b = {}

function char_to_byte(c)
	return c_to_b[c]
end

function byte_to_char(b)
	return b_to_c[b]
end

-----------------------------
-- write raw bytes to memory!
-----------------------------

function store_map(data,addr)
 
 local _v,_index,_addr
 local _data = data
 
 for i = 0,#_data-1 do
 
  _index = i + 1
  _addr = addr + i
  _v = char_to_byte(sub(_data,_index,_index))
 	
 	-- write to mem.
 	
 	poke(_addr, _v)
 	
 end
 
 map_bytes_left -= #data
 map_bytes_used += #data
 
 --return addr + #_data + 1
end

-- =============================

-- turn a byte into a bitstring.

-- =============================

function byte_to_bitstr(b)

	local _str,_bits,_read = "",b,0
	
	-- read bits.
	
	while _bits > 1 do
	
		_read = _bits % 2
		_bits = flr(_bits / 2)
		
		_str = _read .. _str
		
	end
	
	_read = _bits % 2
	_str = _read .. _str
	
	for i = 1,(8-#_str) do
	 _str = "0" .. _str
	end
	
	-- append zeros -> len 8.
	
	return _str

end


-->8
-- standard galactic alphabet!


alphabet = "abcdefghijklmnopqrstuvwxyz"

function glyphs()

	local addr = 0x5600 + (97 * 8)
	local x,y = 0,0
	local byte = 0
	local _p
	
	-- read a-z in sheet data.
	
 for char = 1,26 do
 
 	-- scan glyph data
 
 	for j = 0,7 do 
 		byte = 0
 		for i = 0,7 do
 	 
 	 	_p = sget(x+i,y+j)
 			if (_p != 0) byte += 2 ^ i
 			
 		end
 		
 		-- insert row data.
 		
 		poke(addr,byte)
 		addr += 1
 		
 	end
 	
 	-- go to next character.
 	x += 8
 	if (x >= 128) x = 0 y += 8
 	
 end
 

end

function print_align(t,x,y,c,s)
	
	local _x = x - (#t * 2)
	print(t,_x,y + 1,s)
	print(t,_x,y,c)

end

function print_custom(t,x,y,c,s)

	poke(0x5f58,0x1 | 0x80)
	local _x = x - (#t * 3)
	print(t,_x,y + 1,s)
	print(t,_x,y,c)
	poke(0x5f58,0)

end
-->8
-- compression methods ▒

-- ========================

-- huffman prefix-free code
-- compression algorithm

-- ========================

symbols = "^*./0123456789abcdefghijklmnopqrstuvqxyz"
function get_symbol_probs()

	local buckets = {}
	local probs = {}
	
	-- initialize symbol buckets
	
	for i = 1,#symbols do
	 buckets[sub(symbols,i,i)] = 0
	end
	
	-- count symbols!
	
	for i = 1,#data do 
	 buckets[sub(data,i,i)] += 1
	end
	
	-- div over len so total pr == 1
	
	for k,v in pairs(buckets) do
	 add(probs,{key=k,value= v / #data})
	end
	
	-- inplace sort on probs (asc)
	
	for i = 1,#probs do
	 for j = i,#probs do 
	  if (probs[i].value > probs[j].value) probs[i],probs[j] = probs[j], probs[i]
	 end
	end
	
	return probs
	
end

-------------------------
-- huffman tree + tree ds
-------------------------

function node(l,r,v) return {left=l,right=r,item=v} end

function huffman_tree(prob_list)

	local _tree = {}
	local _symbols = prob_list
	local _joined = {}
	local _first,_second,_new
	
	-- turn symbols into nodes 
	
	for k,v in pairs(_symbols) do
	 _symbols[k] = node(nil,nil,v) 
	end
	
	-----------------------
	-- pick two lowest prob
	-- from each list
	-----------------------
	
	function pick_lowest()
		
		local _s,_c = _symbols[1],_joined[1]
	
		-- handle single pull
		
		if (_s == nil and _c == nil) return nil
	
		-- handle empty lists
		
		if (_s == nil) return del(_joined, _c)
		if (_c == nil) return del(_symbols,_s)
		
		-- pikmin ˇ★ˇ
		
		if _s.item.value < _c.item.value then
		 return del(_symbols,_s)
		else
			return del(_joined,_c)
		end
		
	end
	
	---------
	-- main!
	---------

	while #_symbols > 0 or #_joined > 0 do
	
	 _first = pick_lowest()
	 _second = pick_lowest()
	 	 
	 -- join to new node, add to joined list.

	 if _second != nil then

		 _new = node(_first,_second,
		 								{key = _first.item.key .. _second.item.key,
		 								 value =  _first.item.value + _second.item.value})
			
			add(_joined, _new)
			
		-- done! return root.
		
		else return _first end
	
	end
end


-- encode
function encode_symbols(htree)
 
 -- initialize symbol buckets
	
	local buckets = {}
	for i = 1,#symbols do
	 buckets[sub(symbols,i,i)] = 0
	end
	
	-- delve to find key code pairs.
	
	function delve(node,bits) 
		
		if (node.left != nil) delve(node.left,bits .. "0") 
		if (node.right != nil) delve(node.right,bits .. "1") 
		
		if #node.item.key == 1 then
		 buckets[node.item.key] = bits
		end
		
	end
	
	delve(htree,"")
	return buckets

end


-- decor : to remove.

function print_root(node)
 print_node(node,0)
end

function print_node(node,depth)
	
	-- print me!
	
	local _str = ""
	
	for i = 0,depth do
	 _str ..= "  "
	end
	
	_str..="--> "

	if (depth == 0) _str = "* "
	
	
	print(_str ..node.item.key .. " (" .. node.item.value .. ")")
	
	-- left right
	if (node.left != nil) print_node(node.left,depth+1)
 if (node.right != nil) print_node(node.right,depth+1)
 
end
-->8
-- menu control

menu_state = 0
menu_id = 0
menu_options = {}
menu_selected = 1
menu_x_slide = 0
menu_split_at = 0
menu_y = 48

function add_menu(f,text,img,tc,icon)
 	add(menu_options,{f=f,text=text,img=img,
 	tc=tc==nil and 7 or tc,
 	icon=icon==nil and 64 or icon})
end

-- menu input.

function menu_up()
	sfx(0)
 menu_selected -= 1
 menu_x_slide = 2
 if (menu_selected < 1) menu_selected = #menu_options
end

function menu_down()
 sfx(0)
 menu_selected += 1
 menu_x_slide = 2
 if (menu_selected > #menu_options) menu_selected = 1
end

function update_menu()

	if (menu_x_slide > 0) menu_x_slide -= 1
 
 if (btnp(⬆️)) menu_up()
 if (btnp(⬇️)) menu_down()
 
 if (btnp(❎) and menu_state != 0) menu_main() sfx(1)
 if (btnp(🅾️)) menu_x_slide = 4 sfx(1) menu_options[menu_selected].f()
 
end

-- draw the menu

function draw_menu_options()
	
	-- aling menu based on 
	-- longest text string.
	
	local _longest = 0
	
	for m in all(menu_options) do
	 if (#m.text > _longest) _longest = #m.text
	end
	_longest *= 4
	
	-- print menu options.
	
 local _x0,_y,_i = 64-6-(_longest/2),menu_y,1
 local _select,_c

 if (menu_split_at > 1) _x0 -= _longest-4
 local _x = _x0
 
 for m in all(menu_options) do
  _select = menu_selected == _i
  if (_select) _x += menu_x_slide
  if (_select) rectfill(_x,_y-1,_x + 14 + _longest,_y+8,1)
  spr(_select and (m.img != nil and m.img or (m.icon != nil and 65 or m.icon)) or m.icon,_x+1,_y)
  print(m.text,_x + 12,_y + 2,_select and 0 or 1)
  _c = (dget(_i) == 1 and menu_state == 1) and 10 or m.tc
  print(m.text,_x + 12,_y + 1,m.f == empty and 13 or _c)
  _y += 9
  _i += 1
  
  -- offset for dual menu
  
  if _i == menu_split_at then
  	_x0 += 16 + (_longest)
  	_y = 48
  end
  _x = _x0
  
 end

end

-- ============================

-- 							menu options

-- ============================

function empty() end

function menu_start()
	state_in_ow = true
	--state_load = true
end


function menu_reset()
 	menu_options = {}
 	menu_split_at = 0
 	menu_selected = 1 
 	menu_y = 48
end

function lazy_load_level(id)
	
	if (#data[id] == 0) return empty
	
	return function()
		state_load = true
		state_load_draw = true
	 level_to_load = id
 end
end

function lazy_select_level(id)
 return function()
  was_stage_select = true
  lazy_load_level(id)()
 end
end

function delete_save()

 for i = 1,64 do
  dset(i,0)
 end
 
 dset(17,3)
 dset(18,5)
 
end


function menu_main()
	menu_state = 0
	menu_reset()
	add_menu(menu_start,"start")
	add_menu(menu_levels,"level select")
	add_menu(empty,"highscores")
	add_menu(empty,"settings")
	add_menu(delete_save,"delete save",67)
end

function menu_levels()
	menu_state = 1
	menu_reset()
	menu_split_at = 6
	for i = 1,5 do
		add_menu(lazy_select_level(i),"lvl " .. i)
	end
	add_menu(menu_main,"back",66,13)
 
end
-->8
-- init,update,draw

htree = {}
codes = {}

draw_flicker = true
draw_flicker_timer = 15

state_load = false
state_load_draw = false
state_load_wait = 30
level_to_load = 1
was_stage_select = false
stage_selected = 0 
state_in_ow = false
level_map_root = nil
game_over_screen = false

-- ============================

-- store data and boot game!

-- ============================

function _init()

	-- init cart data

	cartdata("dukki0_picokeen_data")

	if dget(17) <= 0  then
	
	
	 dset(17,5) 
	 dset(18,10)
	 
	 local _score = dget(19)
	 dset(19,flr(_score / 2))
	 game_over_screen = true
	 
	end
	
	
	------------------
	-- sga custom font
	------------------
	
	poke(0x5600,6)
 poke(0x5601,6)
 poke(0x5602,6)
 
 glyphs()
 
 -- build level graph
 
 level_map_root = level_node(1,{level_node(2,{level_node(3,nil),level_node(4,nil,3)}),level_node(5,nil)})
 assign_node_pos(level_map_root,0,0)
 p_at_node = level_map_root
 px,py = level_map_root.x,level_map_root.y
 p_to_x,p_to_y = px,py
 
 --------------------------------
	-- conversion table for symbols.
	--------------------------------
	
	
	local _char
 for i = 1,#symbols+1 do 
 	_char = sub(symbols,i,i)
  b_to_c[i] = _char
		c_to_b[_char] = i
 end
 
 -- ------------------------
 
 -- load menu,map or warning
 
 -- ------------------------
 
 bootmsg = stat(6)

	if bootmsg == "map" then
		
		state_in_ow = true
		local _id = dget(20)		

		-- set at level node
		for n in all(level_nodes) do
		 if n.id == _id then
		  px,py = n.x,n.y
		  p_to_x,p_to_y = px,py
		  p_at_node = n
		 end
		end
		
	else
		menu_main()
	end
	
end

function _update()

		-- in menus or overworld.

		if state_in_ow then
		 update_ow()
		else
		 update_menu()
		end
		
		-- buffer
		
		if state_load then
		 if (state_load_wait > 0) state_load_wait -= 1
		end
		 
		-- load the selected level! 
		 
	 if state_load and state_load_wait <= 0 then
	   store_map(data[level_to_load],map_addr)
				load("picokeen_game",0,was_stage_select and 0 or level_to_load)
	 end

end


function _draw ()

 cls()
 
 -- draw ow
 
 if state_in_ow then
  draw_ow()
 else
 -- draw menus  
		  
		rect(0,0,127,127,1)
		draw_menu_options()
	 
 end
 
 if state_load then
	 	
	 	rectfill(2,44,125,66,0)
	 	rect(2,44,125,66,7)

	  print_align("loading",64,48,7,1)
	  print_custom("loading",64,56,1,0)
 		state_load_draw = false
 
	end
end

-- decor


-->8
-- overworld + player ▒

level_nodes = {}
p_at_node = nil
p_spd = 1
p_anim = 0
p_anim_timer = 4
p_dir = 1
p_right = false

function aproach(v,t,a)
		
	if (v <= t) return v+a > t and t or v+a
	if (v > t) return v-a < t and t or v-a 
end

-- =================

-- level point nodes

-- =================

function level_node(id,link,weight)
 
 local _weight = weight == nil and 1 or weight
 
 local _options,_index = {0,0,0,0},1
 for n in all(link) do
  _options[_index] = n
  _index += 1
 end
 
 local _node = {id=id,links=_options,backs={0,0,0,0},i=0,j=0,weight=_weight}
 add(level_nodes,_node) 
 return _node
 
end

function assign_node_pos(node,i,j)

 node.i,node.j = i,j
 node.x,node.y = 64 + (48*i),64 + (48*j)
 
 local dir,di,dj,axis,sign,rev
 for k = 1,4 do
 	 	
 	
 	local n = node.links[k]
 	if n != 0 then
 		
 		-- calc axial direction.
 		
 		dir = k-1
 		di,dj = 0,0
		 axis = dir % 2 == 1
		 sign = dir >= 2 and 1 or -1
		 if axis then
		 					di = sign
		 else dj = sign end
		 	
		 -- link back to me
		 
		 rev = dir + 2
		 if (rev > 3) rev -= 4 	
		 n.backs[rev+1] = node

		 -- recurse new i,j pos
		 local _dist = n.weight
		 assign_node_pos(n,i+(di*_dist),j+(dj*_dist))
		
		end
 end
end

-- draw the node images.

function draw_node_imgs()

	for node in all(level_nodes) do
		
	 local x,y = node.x,node.y
		local _done = dget(node.id) == 1
		local _img = 190 + (2 * node.id)
	 
	 rectfill(x-6,y-6,x+13,y+13,0)
		rect(x-6,y-6,x+13,y+13,(p_at_node == node and not _done) and 12 or 13)
			
	 
	 spr(_img,x-4,y-4,2,2)
		spr(_done and 97 or 96,x+14,y-14)

	end
end

-- draw the paths between nodes

function draw_nodes_rec(node)

	local x,y = node.x,node.y
	local _done = dget(node.id) == 1

 local dir,di,dj,axis,sign,rev = 0
	
	for i = 1,4 do
		local n = node.links[i]	 	
 	if n != 0 then
 	
 	 dir = i-1
 		di,dj = 0,0
		 axis = dir % 2 == 1
		 sign = dir >= 2 and 8 or -8
 		if axis then
		 					di += sign
		 else dj += sign end
 	
 	 for i = 1,1+(5*n.weight) do
 			local _path = 58
 			if (axis) _path += 1
 			if (not _done) _path += 2
 			spr(_path,x+di,y+dj)
 		 	if axis then
		 					di += sign
				 else dj += sign end
 		end
 	
	 	draw_nodes_rec(n)
		end	
	end
end

p_anim = 0
p_anim_timer = 5
pdrawx,pdrawy = 0,0
pdrawinc = 3

function draw_player()

	local _on_node = (px == p_at_node.x and py == p_at_node.y)
	local _head,_body = 80,114
	
	if not _on_node then
	
		if (p_dir == 0) _head = 98
		if (p_dir == 2) _head = 99
	
	 _body = 115 + p_anim
	 p_anim_timer -= 1
	 if p_anim_timer == 0 then 
	 	p_anim += 1 
	 	p_anim_timer = 5
	 	if (p_anim > 1) p_anim = 0
	 end
	 
	end
	
	if (state_load) _head = 101
	
	local _dx = p_right and 8 or -8
	local _px,_py = px + pdrawx,py + pdrawy
	
	spr(113,_px + _dx,_py+8,1,1,p_right)
	spr(118,_px - _dx,_py+8,1,1,p_right)
	spr(102,_px - _dx,_py,1,1,p_right)
	
 spr(_head,_px,_py,1,1,p_right)
 spr(_body,_px,_py+8,1,1,p_right)
 
end

-- =====================

-- over world main calls

-- =====================

function draw_ow()

 -- player + map

	camera(px-60,py-60)
	draw_nodes_rec(level_map_root)
	draw_node_imgs()
	draw_player()
	
	-- ui
	
	camera(0,0)
	
	if not state_load then
		
		print_align("🅾️:play level ❎:menu",64,118,7,1)
	
		rectfill(0,0,126,18,0)
		rect(2,2,125,18,13)
		rect(0,0,127,127,1)
	
		local _name = names[p_at_node.id]
		print_align(_name,64,4,7,1)
		print_custom(_name,64,12,1,0)

 end
	
end

_move_btns = {2,0,3,1}

function update_ow()

	-- move player to nodes

	for i = 1,4 do
	 if btnp(_move_btns[i]) and px == p_to_x and py == p_to_y then
			local _n = p_at_node.links[i]
			
			-- back track or level done?
		
			if _n == 0 then 
			 _n = p_at_node.backs[i] 
			else 
			 _n = dget(p_at_node.id) == 1 and _n or 0
			end
			
			-- move to level
		
			if _n != 0 then
			 p_to_x,p_to_y = _n.x,_n.y
			 p_at_node = _n
			 p_dir = i-1
			 if (p_dir == 3) p_right = true
			 if (p_dir == 1) p_right = false
			 sfx(3)
			 break
			end
			
	 end
	end
	
	-- move!

 p_spd = (8+abs(px - p_to_x) + abs(py - p_to_y)) / 8

	px = aproach(px,p_to_x,p_spd)
	py = aproach(py,p_to_y,p_spd)
	
	if px == p_to_x and py == p_to_y then
	
		if btnp(🅾️) and dget(p_at_node.id) == 0 then
			sfx(2)
			dset(20,p_at_node.id)
			lazy_load_level(p_at_node.id)()
		end
		
		if (btnp(❎)) state_in_ow = false menu_main() sfx(1)
						
	else p_spd -= 0.5 if (p_spd < 2) p_spd = 2 end
	
end


__gfx__
00770000007000000700000077777000700070007777700000700000777770000070000000700000007000000070000070007000700070007777700007070000
07007000007000000000000000000000700000000000000000700000000000000070000000000000007000000070700000007000700070000000700000070000
07000000000700000700000077000000700000007070700077700000777770000000000000700000707070000070000000007000000770000007700007070000
07000000000070000070000000777000700000000000000000700000007000000070000000000000007000000070700000007000007700000077000007000000
77000000777770000070000000000000777770000000000000700000007000000070000000700000007000000070000077777000777000007770000007070000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000700070000070000077777000000000000070000000000000700070000707000000700000000000000000000000000000000000000000000000000000
00000000000000000070000000007000070700000070000000700000000700000707000007070000000000000000000000000000000000000000000000000000
77777000000000000007000000007000000000007777700000000000000700000707000007070000000000000000000000000000000000000000000000000000
00007000000000000007000000000000077700000000000007070000007000000707000007070000000000000000000000000000000000000000000000000000
77777000700070000007000000007000000000007777700000000000007000000707000007070000777770000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0028e80000aa09a040f77f00013b33100882000000a7a0000000080002eeee200000000000000000001ddd011111111000001101101000100000000000000000
0001200009aa9a9008e777f013333b312888000009aaa77000008e062eeeeee008eee8000000000010dddd010000000010011100000000000000000000000000
00d44600a99a9a90028777f03b33333988a824007699aee0c1c88880eefefee20eeeee800000000010dddd01ddd1666d00111000110011000000000000000000
065494700a4949400d7f7f70333b331228a8a8429777eff8c8c88888efeeefe60eed1ee00000000010ddd101dddd666610110000111011100000000000000000
00d54600022e2ee00d6d676091331998448a8a88477ef824c1c2d88288ee88e20881d8800000000010166601dddd666600001101011101110000000000000000
0d5454600222eee0016d6f1029aa988344488a88942f824900006188de2dee660888888000000000106666011ddd166600011100001100110000000000000000
001d6d000122ee400001d000128992312444448249422494000d1288d22dd66602d66d2000000000106666010000000000111001000000000000000000000000
000000000011441000dd6600033a3310024444200494000000000000022dd661000000000000000010666d000111111110110000010100010000000000000000
00000000000bb0000008800088000088067777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000bbb000088800088800888676666760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d66d00bbbbbbb00888888808880880766776670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600bbbbbbbb8888888800888000767207670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00dddd003333333322222222000222006d6026d60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001dd1003333333002222222022022206dd66dd60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000333000022200022200222d6dddd6d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000003300000022000220000220d6666d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02eeee20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2eeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
efeefee2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
efeefee6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeeee2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
de2dee66000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d22dd666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
022dd661000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeee0002eeee2002eeee2002eeee2002eeee2000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeee002efeefe02eeeeee02eeeeee02eeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006d00eeeeee00efeefee2eeeeeee2feeeefe2efeeefe200000000000000000000000000000000000000000000000000000000000000000000000000000000
0000d600eeeeee00eeeeeee6efeefee6efeefee6fefefef600000000000000000000000000000000000000000000000000000000000000000000000000000000
0000660000006600ee2deee2eefeefe2eeeeeee2eeeeeee200000000000000000000000000000000000000000000000000000000000000000000000000000000
000d6d10000d6d10d22dde66de2dee66de2dee66de2dee6600000000000000000000000000000000000000000000000000000000000000000000000000000000
00d66dd100d66dd1122dd666d22dd666d22dd666d22dd6660e000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd110000dd11001111111022dd661022dd661022dd661f0000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000011112200111122001111220011112221000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000006777dd206777dd206777dd206777dd222000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000d2f77d6dd2f77d6dd2f77d6dd2f77d6d22000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000d67777d6667777d6667777d6667777d66d2000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000d67777166677771666777716667777166d1000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001661771117777711177777111777771100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000661777077771666006777700777166000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000661776077700066006666000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000077000000000000000000cc77070000000000000000000a0000a0000a0001111111111111111000000000000000000000000000000000000000000000000
000077770000000000000000cc909007000044444444000000aa000aa000aa001cccccccccccccc1000000000000000000000000000000000000000000000000
000d77776000000000000000c090a000000444444fff400000aaa00aaa00aaa01c777cccccccccc1000000000000000000000000000000000000000000000000
00d770177600000000000000c0404007000444f44ffff40000aaaa0aaaa0aaaa1cc7ccccccccccc1000000000000000000000000000000000000000000000000
00d601717600000000000000c04000070044444444ffff4000aaaaaaaaaaaaaa1cc7c77cccccccc1000000000000000000000000000000000000000000000000
00d71010760000000cc70700c0400007004444444444ff4000aaaaaaaaa0000a1cc7c7cc77ccccc1000000000000000000000000000000000000000000000000
0d76710777600000cc000070c0400007022444222444444000aaaaaaaaa0000a1cc7c77c7cc777c1000000000000000000000000000000000000000000000000
0167676777d00000c000bb00c000000c022222222244444000aaaaaaaaaaaaaa1cccc7cc77cc7cc1000000000000000000000000000000000000000000000000
011676767dd00000cbb0bb70c000000c024222222222244000999999999000091cccc77cc7cc7cc1000000000000000000000000000000000000000000000000
001666676d000000cbb03070c000020c022222222222222000999900099000091ccccccc77cc7cc1000000000000000000000000000000000000000000000000
0002221210000ee7c00300c0c000d20c022221111112221002222000022222221ccccccccccc7cc1000000000000000000000000000000000000000000000000
001dd6d66d000e7ec0003070c00d020c022111000011111022220000022000021cccccccccccccc1000000000000000000000000000000000000000000000000
0011dd66dd000eeec00300c0c0d20d0c011110000001221022200000022000021111111111111111000000000000000000000000000000000000000000000000
01d111ddd6d00d00c03330c1c002d20c011110000001221022200000022222220000000d60000000000000000000000000000000000000000000000000000000
16101d7d0d7d0d00c00300c1c00d020c011110000001111022200000022222220000000d60000000000000000000000000000000000000000000000000000000
1d101d6d0d6d010001000111111000101011100000011101222000000222222211111111dddddddd000000000000000000000000000000000000000000000000
__label__
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000070007070770077707770000070007770770077007770770007700770000000000000000000000000000000000001
10000000000000000000000000000000000070007070707070707070000070007070707070700700707070007000000000000000000000000000000000000001
10000000000000000000000000000000000070007070717077707710000070007770717071701710717071107770000000000000000000000000000000000001
10000000000000000000000000000000000070007070707070707070000070007070707070700700707070701070000000000000000000000000000000000001
10000000000000000000000000000000000077701770707071707170000077707170707077707770707077707710000000000000000000000000000000000001
10000000000000000000000000000000000010001010101010101010000010001010101010100100101010100010000000000000000000000000000000000001
10000000000000000000000000000000000011100110101010101010000011101010101011101110101011101100000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000010000000001000100011001000100000000010000011001000101111100010001000100010000010000000000000000000000001
10000000000000000000000010100101001000100100100000000000000010100100101000100000000010001000100010000010000000000000000000000001
10000000000000000000000010000000000001100100000000000000000010000100000001101100000000000001101110000001000000000000000000000001
10000000000000000000000010100111000011000100000000000000000010100100000011000011100010000011000010000001000000000000000000000001
10000000000000000000000010000000001110001100001000100000000010001100001110000000000010001110000010000001000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
100101010001010100010101000101010001010100010101000101d0c0003070c00d020c0d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000d0c00300c0c0d20d0c0d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000d0c03330c1c002d20c0d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000d0c00300c1c00d020c0d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000d001000111111000100d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000d000000000000000000d000000000000000000000000000000000000000000000000000001
100000000000000000000000000000000000000000000000000000dddddddddddddddddddd000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111001000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000001101000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010011100000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000001101000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111001000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000001101000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010011100000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000001101000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111001000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000001101000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010011100000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000000000000000000000000000000000000001
1000000000000000000000000000006d00000000000000000000000000000000110100000000006d000000000000000000000000000000000000000000000001
100000000000000000000000000000d60000000000000000000000000000000111000000000000d6000000000000000000000000000000000000000000000001
10000000000000000000000000000066000000000000000000000000000000111001000000000066000000000000000000000000000000000000000000000001
10000000000000000000000000000d6d100000000000000000000000000010110000000000000d6d100000000000000000000000000000000000000000000001
1000000000000000000000000000d66dd1000000000000000000000000000000110100000000d66dd10000000000000000000000000000000000000000000001
10000000000000000000000000000dd1100000000000000000000000000010011100000000000dd1100000000000000000000000000000000000000000000001
100000dddddddddddddddddddd0000000000000000000000000000cccccccccccccccccccc000000000000000000000000000000000000000000000000000001
100000d000000000000000000d0000000000000000000000000000c000000000000000000c000000000000000000000000000000000000000000000000000001
100000d011111111111111110d0000000000000000000000000000c000000770000000000c000000000000000000000000000000000000000000000000000001
100000d01cccccccccccccc10d0000000000000000000000000000c000007777000000000c000000000000000000000000000000000000000000000000000001
100000d01c777cccccccccc10d0000000000000000000000000000c0000d7777600000000c000000000000000000000000000000000000000000000000000001
100000d01cc7ccccccccccc10d0000000000000000000000000000c000d77017760000000c000000000000000000000000000000000000000000000000000001
100000d01cc7c77cccccccc10d1010100010101000101010001010c000d60171760000000c000000000000000000000000000000000000000000000000000001
100000d01cc7c7cc77ccccc10d0000000000000000000000000000c000d71010760000000c000000000000000000000000000000000000000000000000000001
100000d01cc7c77c7cc777c10d0011001100110011001100110011c00d767107776000000c000000000000000000000000000000000000000000000000000001
100000d01cccc7cc77cc7cc10d1011101110111011101110111011c00167676777d000000c000000000000000000000000000000000000000000000000000001
100000d01cccc77cc7cc7cc10d1101110111011101110111011101c0011676767dd000000c000000000000000000000000000000000000000000000000000001
100000d01ccccccc77cc7cc10d1100110011001100110011001100c0001666676d0000000c000000000000000000000000000000000000000000000000000001
100000d01ccccccccccc7cc10d0000000000000000000000000000c00002221210000ee70c000000000000000000000000000000000000000000000000000001
100000d01cccccccccccccc10d0101010001010100010101000101c0001dd6d66d000e7e0c000000000000000000000000000000000000000000000000000001
100000d011111111111111110d0000000000000000000000000000c00011dd66dd000eee0c000000000000000000000000000000000000000000000000000001
100000d00000000d600000000d0000000000000000000000000000c001d111ddd6d00d000c000000000000000000000000000000000000000000000000000001
100000d00000000d600000000d0000000000000000000000000000c016101d7d0d7d0d000c000000000000000000000000000000000000000000000000000001
100000d011111111dddddddd0d0000000000000000000000000000c01d101d6d0d6d01000c000000000000000000000000000000000000000000000000000001
100000d000000000000000000d0000000000000000000000000000c000000000000000000c000000000000000000000000000000000000000000000000000001
100000dddddddddddddddddddd0000000000000000000000000000cccccccccccccccccccc000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

__map__
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010200001f05500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000000c55513500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
910e000011255002050c2551125513255002051525500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205
9506000011615000000c6250c0001161500000246000d500006000e50010500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
